time: "Sep 28, 2020"
subject: "How to remove the first 300 million lines from a 700 GB txt file on a system with 1 TB max disk space?"
draft: false

description: |
  Hi everyone, Welcome to issue #171.

links:
  - url: https://unix.stackexchange.com/questions/610494/how-do-i-remove-the-first-300-million-lines-from-a-700-gb-txt-file-on-a-system-w
    title: "How do I remove the first 300 million lines from a 700 GB txt file on a system with 1 TB max disk space?"
    description: |
      The accepted answer is boring but all other answers are very creative and informative.

  - url: https://www.taniarascia.com/asynchronous-javascript-event-loop-callbacks-promises-async-await/
    title: "Understanding the Event Loop, Callbacks, Promises, and Async/Await in JavaScript"
    description: |
      Event Loop is a leak abstraction. It forces us to understand is characters to write well perform applications. It's the primary primitive browser that allows writing code that won't cause blocking behaviour.
      Callbacks, Promises and Async/Await is how to deal with event loop.

  - url: https://www.elttam.com/blog/simple-bugs-with-complex-exploits/
    title: "Simple bugs with complex exploits"
    description: |
      FixedArray and FixedDoubleArray are used to create objects in JavaScript, and although the new implementations looked valid at first glance, they were missing a key component: a maximum length check to ensure that the newly created array’s length cannot not go past a predefined upper limit.
      To the untrained eye, this bug does not look exploitable, but as shown on the bug report, Sergey made use of TurboFan’s typer to gain access to a very powerful exploitation primitive: an array whose length field is much larger than its capacity. This primitive provides an attacker with an out-of-bounds access primitive on the V8 heap, which can very easily lead to code execution

  - url: https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/diary-of-an-engineer-delivering-45x-faster-percentiles-using/ba-p/1685102
    title: "Diary of an Engineer: Delivering 45x faster percentiles using Postgres, Citus, & t-digest"
    description: |
      The percentile calculations were taking about 6 minutes instead of the required 30 second SLA. How and which tools we can use to debug and reduce that to the target SLA: 30 seconds

  - url: https://www.cybertec-postgresql.com/en/hot-updates-in-postgresql-for-better-performance/
    title: "HOT updates in postgresql for better performance"
    description: |
      HOT stand for  “Heap Only Tuple”. It is a feature that overcomes some of the inefficiencies of how PostgreSQL handles UPDATEs.
      Update adds a new row version call tuple. In other words, an update is like delete followed by an insert. Essentially, UPDATE-heavy workloads are challenging for PostgreSQL. This is the area where HOT updates help.

  - url: https://hakibenita.com/sql-anomaly-detection
    title: "Simple Anomaly Detection Using Plain SQL"
    description: |
      Using some high school level statistics and a fair knowledge of SQL, I implemented a simple anomaly detection system that works

  - url: https://www.innoq.com/en/blog/anatomy-of-a-good-test/
    title: "Anatomy of a Good Test"
    description: |
      Show what makes a test a good one and describe desired and unwanted properties. Interestingly enough, all those properties hold, no matter how isolated or integrated the test is

  - url: https://slack.engineering/building-the-next-evolution-of-cloud-networks-at-slack/
    title: "Building the Next Evolution of Cloud Networks at Slack"
    description: |
      Network is the backbone of almost any cloud application. When companies scale, we add more network, qa, staging, prod, support, rds, elasticache. Eventually we need to allow those network to communicate with each others.
      How to manage that complexity? Adding a new network and allow traffic flow require you to add a new route table. A single bad route can cause lost traffic? Let's learn how Slack manage that complexity

  - url: https://www.freecodecamp.org/news/wifi-hacking-securing-wifi-networks-with-aircrack-ng/
    title: "WiFi Hacking 101 – How to Secure Your Wifi Networks With Aircrack-NG"
    description: |
      You cannot secure your wifi network without knowing about attack vectors. How will you validate that your netowrk is secure? You need to know some tools for hacking purposes.

  - url: https://artem.krylysov.com/blog/2020/07/28/lets-build-a-full-text-search-engine/
    title: "Let's build a Full-Text Search engine"
    description: |
      This is in Golang code sample but you get the idea of building an inverted index, text analysis, tokenizer, filter and the trick to drop stop words - because almost anything in English contains them(such as them, I, you, etc)

  - url: https://www.paepper.com/blog/posts/how-to-properly-manage-ssh-keys-for-server-access/
    title: "How to properly manage ssh keys for server access"
    description: "The quickest way to allow SSH access is adding their public key to `authorized_keys`, which obviously won't scale. In this, we looked at how we setup a CA as a centralization auth method for SSH"


video:
  - url: https://www.youtube.com/watch?v=VBrnmciV9fM
    title: "Writing System Software episode 1"
    description: |
      Watch Antirez(Redis' creator) explains Redis code base

  - url: https://www.youtube.com/watch?v=Jkx6kVbDpL4
    title: "Nielsen: Processing 55TB of Data Per Day with AWS Lambda"

read_code:
  - url: https://github.com/selectel/sql-battleships
    title: SQL Battleships
    description: |
      Can you imagine a battleships game implement with SQL? Yes, this is that level 9000 of SQL.
    category: ['SQL']

  - url: https://github.com/kkuchta/TSpell
    title: TSpell
    description: "a compile-time spell checker using only typescript's type checker. obviously not that serious, but it does work."
    category: ['TypeScript']

  - url: https://github.com/MikeMcl/big.js
    title: big.js
    description: |
      A small, fast JavaScript library for arbitrary-precision decimal arithmetic.
    category: ['JavaScript']

  - url: https://github.com/blushft/go-diagrams
    title: go-diagrams
    description: |
      Last week, I included diagrams, a tool allow us to define graph using Python code. This time we have a loose port of [diagrams](https://github.com/mingrammer/diagrams)
    category: ['Go']


  - url: https://github.com/agrafix/rubyspeed
    title: rubyspeed
    description: "a basic proof of concept (horribly hacked together) that allows annotating method declarations to automatically be specialized and compiled to C."
    category: ['Ruby']

tool:
  - url: https://securityheaders.com/
    title: securityheaders
    description: |
      Scan your site for security headers. Useful to know what headers you should set to enhance security.

  - url: https://github.com/leeoniya/uPlot
    title: μPlot
    description: |
       a fast, memory-efficient Canvas 2D-based chart for plotting time series, lines, areas, ohlc & bars; from a cold start it can create an interactive chart containing 150,000 data points in 135ms

  - url: https://github.com/beefsack/webify
    title: webify
    description: |
      Turn shell commands into web services

  - url: https://terjanq.github.io/Tiny-XSS-Payloads/index.html
    title: Tiny XSS Payload
    description: |
      A few XSS snippet that you can use whenever you want to test some XSS, or test it on your own site :-).

  - url: https://github.com/cwida/duckdb
    title: duckdb
    description: |
      an embeddable SQL OLAP database management system. Like SQLite but has more Postgres-like features.

  - url: https://github.com/nakabonne/ali
    title: Ali
    description: |
      A load testing tool aimed to perform real-time analysis, inspired by vegeta and jplot.

  - url: https://github.com/amacneil/dbmate
    title: dbmate
    description: "A lightweight, framework-agnostic database migration tool."
