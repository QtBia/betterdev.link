time: "Dec 16, 2019"
subject: "Three ways to reduce the costs of your HTTP(S) API on AWS"

draft: false

description: ""

links:
  - url: https://gameanalytics.com/blog/reduce-costs-https-api-aws.html
    title: "Three ways to reduce the costs of your HTTP(S) API on AWS"
    description: |
      I never imagine that by changing SSL cert provider can reduce the bandwidth in TLS, leading to saving cost. Or just
      remove some headers does that too. They managed to save $8000/month on AWS for bandwidth by tweaking their HTTPS response.

  - url: https://codewords.recurse.com/issues/two/git-from-the-inside-out
    title: "Git from the inside out"
    description: |
      The essay focuses on the graph structure that underpins Git and the way the properties of this graph dictate Git’s behavior. Looking at fundamentals, you build your mental model on the truth rather than on hypotheses constructed from evidence gathered while experimenting with the API.

  - url: https://tanin.nanakorn.com/technical/2019/12/08/tests-for-timezones.html
    title: "Edgecases for timezones"
    description: |
      Time is easy if it's static. In reality every countries has different rule and time move forward/backward. That's why people use `tzinfo` package, but a big might still happen.
      Example: 2019-09-08 is an invalid time in Chile. Go figure.

  - url: https://blog.plaid.com/how-we-parallelized-our-node-service-by-30x/
    title: "How we 30x'd our Node parallelism"
    description: |
      Plaid relied on careful planning, good tooling and observability, and a healthy dose of debugging. In the end, they were able to 30x our parallelism, which equated to a cost savings of about $300k annually.
      If you are into NodeJS, this [Stackoverflow.com answer](https://stackoverflow.com/questions/22644328/when-is-the-thread-pool-used/22644735#22644735) explain NodeJS thread pool very well

  - url: https://queue.acm.org/detail.cfm?id=3309571
    title: "Metrics That Matter"
    description: "Critical but oft-neglected service metrics that every SRE and product owner should care about"

  - url: http://maplant.com/gc.html
    title: "Writing a Simple Garbage Collector in C"
    description: |
      People seem to think that writing a garbage collector is really hard, a deep magic understood by a few great sages and Hans Boehm (et al). Well it's not. In fact, it's rather straight forward. I claim that the hardest part in writing a GC is writing the memory allocator, which is as hard to write as it is to look up the malloc example in K&R.

  - url: https://www.0x65.dev/blog/2019-12-14/the-architecture-of-a-large-scale-web-search-engine-circa-2019.html
    title: "The Architecture of a Large-Scale Web Search Engine, circa 2019"
    description: |
      A great series about building search engine that BetterDev linked to a few time. This article explores the technology stack they employ today and some of their choices and decisions, which have been taken and iterated upon over the years, to cater both external and internal users.

  - url: https://www.evanjones.ca/ordered-vs-unordered-indexes.html
    title: "Why databases use ordered indexes but programming uses hash tables"
    description: |
      Hash tables are far more common than ordered data structures such as trees for in-memory data structures.
      1% of CPU and 4% of RAM globally at Google is used by hash tables. However, in databases, the default is almost always an ordered index, typically a B-Tree. Why so?


  - url: https://bowero.nl/blog/2019/12/14/a-function-to-sleep-a-1000-years-explained/
    title: "A function to sleep a 1000 years: explained"
    description: |
      You cannot easy do that because 2^32 seconds is about 100 years only. And yes, someone has this one liner magic: `i;f(){--i&&f(sleep(7));}`.
      Read on to understand.

  - url: https://neilkakkar.com/unix.html
    title: "How Unix Works: Become a Better Software Engineer"

#  - url: http://web.eecs.utk.edu/~azh/blog/challengingprojects.html
#    title: "Challenging projects every programmer should try"
#    description: |
#      Working on a normal CRUD web app or business logic may not push us to the edge of our capability where most
#      of thing can be express easily. What if we step out of the comfort zone: build an editor without using built-in
#      text box, write a mini operating system. What is the resources to get us started on that?

#https://refactoringui.com/previews/building-your-color-palette/
# - url: https://www.booleanworld.com/building-recursive-descent-parsers-definitive-guide/
#   title: "Building Recursive Descent Parsers: The Definitive Guide"
#
#  - url: https://susam.in/blog/writing-boot-sector-code/
#    title: "https://susam.in/blog/writing-boot-sector-code/"
#  - url: https://soptik.tech/articles/beware-of-shell-globs.html
#    title: "Beware of shell globs"
#    description: |
#      A very short article on dangerous of shell globs expansion and why we should use `--` when invoking command.
#
#    url: https://eater.net/vga
#    title: "Let’s build a video card!"
#    description: "In these videos, I talk about how VGA signals work and build a circuit that provides the correct timing of sync signals so that a monitor recognizes the signal and displays an image stored on an EEPROM."

    #  - url: https://labs.spotify.com/2019/11/12/spotifys-event-delivery-life-in-the-cloud/
    #    title: "Spotify’s Event Delivery – Life in the Cloud"
    #
   #
    #  - url: https://medium.com/@alexharri/the-engineering-behind-figmas-vector-networks-688568e37110
    #    title: "The Engineering behind Figma’s Vector Networks"
    #  - url: https://blog.trailofbits.com/2019/11/27/64-bits-ought-to-be-enough-for-anybody/
    #    title: "64 Bits ought to be enough for anybody!"
    #

    # https://lwn.net/SubscriberLink/803890/707f3d8d5c366a1e/

    #  - url: https://blog.trailofbits.com/2019/11/07/attacking-go-vr-ttps/
    #    title: "Security assessment techniques for Go projects"
    #
    #  - url: https://squadrick.github.io/journal/ipc-locks.html
    #    title: Interprocess Locks
    #    description: |
    #
    #  - url: https://lord.io/blog/2019/text-editing-hates-you-too/
    #    title: "Text Editing Hates You Too"
    #    description: |
    #      The challenge of building text editor.
    #
    #
    #  - url: https://developer.okta.com/blog/2019/10/21/illustrated-guide-to-oauth-and-oidc
    #    title: "An Illustrated Guide to OAuth and OpenID Connect"
    #    description: |
    #      The OpenID Connect flow looks the same as OAuth. The only differences are, in the initial request, a specific scope of openid is used, and in the final exchange the Client receives both an Access Token and an ID Token.
    #

    #  - url: https://www.figma.com/blog/how-figmas-multiplayer-technology-works/
    #    title: "How Figma’s multiplayer technology works"
    #
    #  - url: https://adoptingerlang.org
    #    title: "Adopting Erlang i"


video:
  - url: https://lagunita.stanford.edu/courses/Engineering/Networking-SP/SelfPaced/about
    title: "Introduction to Computer Networking"
    description: "Not a really a normal video. But a list of video lection and document for learning about network.  Though network is fundamental of internet, many didn't know what go under hood. How IP, Routers work etc.  You will love this free course. They teach thing like implement your packet switching, Congestion Control, NAT, TLS Cipher Negotiation"

  - url: https://www.youtube.com/watch?v=2eEKuK5eOC4
    title: " Migrating the live Pokémon database to Aurora PostgreSQL"
    description: |
      Learn how the Pokémon Company International stores and supports data for more than 300 million players with the help of AWS. In this session, Jeff Webb (development manager) and David Williams (senior DevOps engineer) discuss how they migrated to Amazon Aurora PostgreSQL and Amazon DynamoDB, resulting in zero downtime for operations.
      You can also watch more video from [AWS RE:Invent](https://aws.amazon.com/events/events-content/?awsf.filter-series=*all&awsm.page-cards=1&awsf.filter-level=level%23400)
      but make sure to only watch Level 400(Expert)


    #  - url: https://www.youtube.com/playlist?list=PLSE8ODhjZXja7K1hjZ01UTVDnGQdx5v5U
    #    title: "15-721 Advanced Database Systems (Spring 2019)"
    #    description: |
    #      This course is a comprehensive study of the internals of modern database management systems [https://15721.courses.cs.cmu.edu/spring2019/]

read_code:
  - url: https://github.com/rust-db/refinery
    title: refinery
    description: "Powerful SQL migration toolkit for Rust."
    category: ['Rust']

  - url: https://github.com/streamich/memfs
    title: memfs
    description: "In-memory filesystem with Node's API"
    category: ['JavaScript']

  - url: https://github.com/theodo/falco
    title: falco
    description: |
      Falco helps you monitor, analyze, and optimize your websites
    category: ['Python']

  - url: https://github.com/justeat/JustTweak
    title: JustTweak
    description: |
      a framework for feature flagging and A/B testing for iOS apps
    category: ['Swift']

  - url: https://github.com/huginn/huginn
    title: huginn
    description: |
      a system for building agents that perform automated tasks for you online.
    category: ['Ruby']

  - url: https://github.com/kyleconroy/sqlc
    title: sqlc
    description: |
      Generate type safe Go from SQL
    category: ['Go']

  - url: https://github.com/zotonic/zotonic
    title: zotonic
    description: |
      The Erlang Web Framework & CMS
    category: ['Erlang']

tool:
  - url: https://github.com/yandex/odyssey
    title: odyssey
    description: |
      Scalable PostgreSQL connection pooler

  - url: https://github.com/antonmedv/fx
    title: fx
    description: |
      Command-line tool and terminal JSON viewer

  - url: https://github.com/gskinner/regexr/
    title: regexr
    description: "a HTML/JS based tool for creating, testing, and learning about Regular Expressions"

  - url: https://github.com/sitespeedio/sitespeed.io
    title: sitespeed
    description: |
       a complete web performance tool that helps you measure the performance of your website

  - url: https://github.com/docker-slim/docker-slim
    title: docker-slim
    description: "Minify and Secure Docker containers"

  - url: https://openlayers.org/
    title: openlayers
    description: "A high-performance, feature-packed library for all your mapping needs"

#  - url: https://github.com/sharkdp/fd
#    title: fd
#    description: "A simple, fast and user-friendly alternative to 'find'"
#
#  - url: https://github.com/arp242/uni
#    title: uni
#    https://github.com/zgoat/goatcounter
#
#  - url: https://www.happyhues.co/
#    title: happyhues
#    description: "Curated colors in context."
