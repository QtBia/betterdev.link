---
time: June 5, 2017
links:
  - url: https://redditblog.com/2017/05/24/view-counting-at-reddit/
    title: View Counting at Reddit
    description: How Reddit implemented counting at scale.

  - url: https://www.destroyallsoftware.com/compendium/network-protocols?share_key=97d3ba4c24d21147
    title: Network protocols for programmers who know at least one programming language
    description: The network stack does several seemingly-impossible things. It does reliable transmission over our unreliable networks, usually without any detectable hiccups. It adapts smoothly to network congestion. It provides addressing to billions of active nodes. It routes packets around damaged network infrastructure, reassembling them in the correct order on the other side even if they arrived out of order. It accommodates esoteric analog hardware needs, like balancing the charge on the two ends of an Ethernet cable. This all works so well that users never hear of it, and even most programmers don't know how it works.

  - url: https://medium.com/technology-learning/event-sourcing-and-cqrs-a-look-at-kafka-e0c1b90d17d8
    title: Building Scalable Applications Using Event Sourcing and CQRS(2016)
    description: Discussing event sourcing, cqrs, kafka and how to use it to build scalable data driven infrastructure

  - url: https://ukcloud.pro/aws-vpc-subnetting-and-addressing-6dd627a0ef50
    title: Footgun Prevention with AWS VPC Subnetting and Addressing
    description: "This post is for folks who are using AWS but might not realise they are now Cloud Network Engineers :) VPCs are simple when you know them, but we’re all Donald Rumsfeld at some point: we don’t know what we don’t know (until it bites us in the proverbial)"

  - url: https://istio.io/
    title: An open platform to connect, manage, and secure microservices
    description: "Istio provides an easy way to create a network of deployed services with load balancing, service-to-service authentication, monitoring, and more, without requiring any changes in service code. You add Istio support to services by deploying a special sidecar proxy throughout your environment that intercepts all network communication between microservices, configured and managed using Istio’s control plane functionality."

  - url: https://github.com/karan/Projects
    title:  A list of practical projects that anyone can solve in any programming language.
    description: A very good way to consolidate your algorithms skill, or an excuse to learn a new programming language

  - url: http://www.craftinginterpreters.com/
    title: Crafting Interpreters
    description: "A handbook for making programming languages. This book contains everything you need to implement a full-featured, efficient scripting language. You’ll learn both high-level concepts around parsing and semantics and gritty details like bytecode representation and garbage collection"

  - url: https://github.com/brendangregg/perf-tools
    title: "Performance analysis tools based on Linux perf_events (aka perf) and ftrace"

  - url: http://blog.christianposta.com/microservices/00-microservices-patterns-with-envoy-proxy-series/
    title: "Microservices Patterns With Envoy Sidecar Proxy: The series"
    description: "A series of posts looking deeper at Envoy Proxy and Istio.io and how it enables a more elegant way to connect and manage microservices."

  - url: https://github.com/spolu/warp?attempt=8
    title: "Secure and simple terminal sharing"
    description: The code is small enough at this point and you can dive into it to learn how to implement a terminal sharing app in Go

  - url: https://codeascraft.com/2017/05/30/reducing-image-file-size-at-etsy/
    title: Reducing Image File Size at Etsy
    description: Great post from etsy explain how they achieve a smaller size for user upload image

  - url: https://engineering.instagram.com/sharding-ids-at-instagram-1cf5a71e5a5c
    title: Sharding & IDs at Instagram
    description: "With more than 25 photos and 90 likes every second, we store a lot of data here at Instagram. To make sure all of our important data fits into memory and is available quickly for our users, we’ve begun to shard our data — in other words, place the data in many smaller buckets, each holding a part of the data"

  - url: https://hardbin.com/ipfs/QmUGFZAWzWEaHjC1dHAUQ8aKCuKupKsX9vLzhGZV9PLknu
    title: hardbin - The world's most secure encrypted pastebin, guaranteed
    description: "Hardbin is an encrypted pastebin, with the decryption key passed in the URL fragment, and the code and data served securely with IPFS. (IPFS is a distributed content-addressable storage system that is web-compatible; it's basically bittorrent for the web)."


