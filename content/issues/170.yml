time: "Sep 21, 2020"
subject: "What Gitlab leanred after a year on Kubernetes"
draft: false

description: |
  Hi everyone, Welcome to issue #170.

  With that being said, I have noticed many companies has reduced their head count during Covid-19. So if  you are looking for a job now, or want a job soon, you can
  check out a few resource such as [data science interview questions](https://github.com/alexeygrigorev/data-science-interviews) or [cracking LeetCode, not only how but also why](https://github.com/labuladong/fucking-algorithm/tree/english). And this [great post, laid off now whats](https://bharathpbhat.github.io/2020/09/19/laid-off-now-what.html)

links:
  - url: https://howhttps.works/
    title: how https works in a comic
    description: |
      We linked to a few artciles on this such as [The New Illustrated TLS Connection](https://tls13.ulfheim.net/).
      This one focus on HTTPS and present it in a funway. If you are fan of xkcd, you gonna love this

  - url: https://about.gitlab.com/blog/2020/09/16/year-of-kubernetes/
    title: "What we learned after a year of GitLab.com on Kubernetes"
    description: "It's been one year since we moved GitLab.com to Kubernetes. We unpack the challenges and learnings from this major migration."

  - url: https://ucnv.github.io/pnglitch/
    title: "The Art of PNG Glitch"
    description: |
      PNG is an image format that has a history of development beginning in 1995, and it is still a popular, long living format. Generally, it is known for its features such as lossless compression and the ability to handle transparent pixels.
      However, we do not look at image formats from a general point of view, but rather think of ways to glitch them. When we look at PNG from the point of view of glitch, what kind of peculiarity does it have?

  - url: https://paulmillr.com/posts/noble-secp256k1-fast-ecc/
    title: "Learning fast elliptic-curve cryptography in JS"
    description: |
      If you could characterize state of JS cryptography in one word, it would be: “sad”.  Paul has decided create TypeScript libraries that don’t use dependencies & are simple to audit for non-cryptographer. Having no math background, it wasn’t that simple.

  - url: https://confused.ai/posts/intercepting-zoom-tls-encryption-bpf-uprobes
    title: "Intercepting Zoom's encrypted data with BPF"
    description: "In author's word: I wrote a command line tool that uses BPF uprobes to intercept the TLS encrypted data that zoom sends over the network, and here I'm going to show the process I went through to write it. After I wrote this post I made the tool generic so that it can now instrument any program that uses OpenSSL. I published the code at https://github.com/alessandrod/snuffy."

  - url: https://r2c.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/
    title: "Hardcoded secrets, unverified tokens, and other common JWT mistakes"
    description: |
      JWT is no doubt very useful and simple on how to use them, but they has many vector attacks. This post look ino Hardcoded secrets,
      Allowing the none algorithm for signing,
      Missing or incorrect token validation,
      Sensitive data exposure

  - url: https://r2c.dev/blog/2020/understanding-and-preventing-dos-in-web-apps/
    title: "Not all attacks are equal: understanding and preventing DoS in web applications"
    description: |
      How do you response to DOS/DDOS attach?
      This article tries to cut through those arguments. It provides a framework for engineering and application security teams to think about denial-of-service risk, breaks down DoS vulnerabilities into high-, medium-, and low-risk classes, and has recommendations for mitigations at each layer.

  - url: https://arxiv.org/pdf/1504.06804.pdf
    title: "High Speed Hashing for Integers and Strings"
    description: |
      These notes describe the most efficient hash functions currently known for hashing integers
      and strings. These modern hash functions are often an order of magnitude faster than those
      presented in standard text books. They are also simpler to implement, and hence a clear win
      in practice, but their analysis is harder.

  - url: https://engineering.shopify.com/blogs/engineering/shopify-monolith
    title: "Under Deconstruction: The State of Shopify’s Monolith"
    description: |
      Shopify’s core monolith has over 2.8 million lines of Ruby code and 500,000 commits. Rails doesn’t provide patterns or tooling for managing the inherent complexity and adding features in a structured, well-bounded way.
      Shopify founded a team to investigate how to make their Rails monoliths more modular. The goal was to help them scale towards ever increasing system capabilities and complexity by creating smaller, independent units of code they called components.

  - url: https://www.2ndquadrant.com/en/blog/7-best-practice-tips-for-postgresql-bulk-data-loading/
    title: "7 Best Practice Tips for PostgreSQL Bulk Data Loading"

#  - url: https://www.astrocamel.com/web/2020/09/04/how-i-bypassed-cloudflares-sql-injection-filter.html
#title: "How I bypassed Cloudflare's SQL Injection filter"
#  - url: https://www.reddit.com/r/aws/comments/irkshm/moving_25tb_data_from_one_s3_bucket_to_another/
#    title:
#
#  - url: https://www.elttam.com/blog/simple-bugs-with-complex-exploits/
#    title: "SIMPLE BUGS WITH COMPLEX EXPLOITS"
#  - url: https://willschenk.com/articles/2020/gitlog_in_sqlite/
#    title: gitlog in sqlite
#  - url: https://people.kernel.org/linusw/how-the-arm32-linux-kernel-decompresses
#    title: "How the ARM32 Linux kernel decompresses"
#    description: |
#
#  - url: http://matt.might.net/papers/vanhorn2010abstract.pdf
#    title: "Abstracting Abstract Machines"
#  - url: https://notes.eatonphil.com/writing-a-simple-python-compiler.html
#    title: "Writing a simple Python compiler: 1. hello, fibonacci"
#
#
#  - url: https://tls13.ulfheim.net/
#    title: "The New Illustrated TLS Connection"
#
#  - url: https://info.crunchydata.com/blog/avoiding-the-pitfalls-of-brin-indexes-in-postgres
#    title: "Avoiding the Pitfalls of BRIN Indexes in Postgres"
#
#  - url: https://0x434b.dev/breaking-the-d-link-dir3060-firmware-encryption-recon-part-1/
#    title: "Breaking the D-Link DIR3060 Firmware Encryption - Recon - Part 1"
#
#  - url: https://www.cybertec-postgresql.com/en/a-quick-pg_stat_statements-troubleshooting-hack/
#    title: "A quick pg_stat_statements troubleshooting hack"
#    description: |
#      What would you do when you cannot install a Postgres monitoring system such as pghero or pgwatch2 to collect metric for performance debugging. This articile is about a quick hack that create a temp table and set up a periodically job to get metric from `pg_stat_statements` and insert into that table. Then analyzing that tabel to find slow query
#https://ptx2.net/posts/unbricking-a-bike-with-a-raspberry-pi/
#  - url: https://hassamuddin.com/blog/reg-alloc/
#    title: "A Quick Introduction to Register Allocation"
#    description: |
#
#https://teachyourselfcs.com/
#  https://opensource.com/article/20/6/linux-noatime
#http://web.eecs.utk.edu/~azh/blog/teenytinycompiler1.html
#  - url: https://github.com/EmilHernvall/dnsguide
#    title: "A guide to writing a DNS Server from scratch in Rust"
#    description: |
#      Writing DNS server is like hello world for networking to me. DNS is small enough, not massive like HTTP, also relying on UDP, so I think it's a good exercise to learn UDP, DNS protocol.
#      This artcile is focus on Rust, and I'm not a Rust programmer, only toy with Rust and I was able to follow it.
#
#  - url: https://csswizardry.com/2020/05/the-fastest-google-fonts/
#    title: "The Fastest Google Fonts"
#
#    https://www.gutenberg.org/files/30688/30688-h/30688-h.htm
#
#    https://thorsten-hans.com/5-types-of-zsh-aliases#operating-system-specific-aliases
# https://github.com/LisaDziuba/Marketing-for-Engineers
#https://pragmaticwebsecurity.com/articles/oauthoidc/from-implicit-to-pkce.html

video:
  - url: https://www.youtube.com/watch?v=sXmY26pOE-Y
    title: "Facebook Connect: John Carmack Unscripted Live"

  - url: https://www.youtube.com/watch?v=TKODwTtKWew&feature=youtu.be
    title: "Watch how Gitlab upgraded their Postgres"
    description: |
      Last week I included a links to how Gitlab upgrade their database. This is the recording of that process in 2 hours. You gotta see their engineers doing this live :-). It's interesting to shadow how companies upgrade their database, the trickiest thign to upgrade as always. Require lot of planning and cordination

read_code:
  - url: https://github.com/traefik/yaegi
    title: yaegi
    description: |
       Another Elegant Go Interpreter.
    category: ['Go']

  - url: https://www.leshenko.net/p/ugit/
    title: "ugit: DIY Git in Python"
    category: ['Python']
tool:
  - url: https://diagrams.mingrammer.com/
    title: diagrams
    description: |
      Diagrams lets you draw the cloud system architecture in Python code

  - url: https://github.com/lyft/clutch
    title: clutch
    description: |
      An extensible platform for infrastructure managementa

  - url: https://github.com/LukasLoeffler/pgtools
    title: pgtools
    description: |
      debugging applications that use postgres as DBMS. It aims to help the user to understand his application by displaying the database events triggered by the application in real time.

  - url: https://github.com/nkanaev/yarr
    title: yarr
    description: |
      yet another rss reader.

  - url: https://github.com/viebel/klipse
    title: klipse
    description: |
      a Javacript plugin for embedding interactive code snippets in tech blogs. A simple client-side code evaluator pluggable on any web page: clojure, ruby, javascript, python, scheme, es2017, jsx, brainfuck, c++, reagent, lua, ocaml, reasonml, prolog, common lisp
