time: "Jun 23, 2019"
subject: "What bugs cause cloud production incidents? and you don't need Kafka"


draft: false

description: |
  This week I learn a quick shell tip I want to share. Whenever I run command and it failed because it need `root`, most of time I use `up` key to get back command
  then go to beginning and add `sudo`. Turn out, it has a quicker way, enter: `sudo !!`. So just remember `sudo bang bang` when you are in my situation.


  Now, back to our usual issue.

links:
  - url: https://blog.acolyer.org/2019/06/21/what-bugs-cause-cloud-production-incidents/
    title: "What bugs cause cloud production incidents?"
    description: |
      A study of every high severity production incident at Microsoft Azure services over a span of six months, where the root cause of that incident was a software bug. Data-format bugs, fault-related bugs, timing bugs, and constant_value bugs being the largest categories

  - url: http://blog.cleancoder.com/uncle-bob/2019/06/16/ObjectsAndDataStructures.html
    title: "Classes vs. Data Structures"
    description: |
      Uncle Bob, author of Agile method, discuss about class vs data structure since we used them to encapsulate data.

  - url: https://vicki.substack.com/p/you-dont-need-kafka
    title: "You don't need Kafka"
    description: |
      Highly opininated on some discuss about usage of Kafka and its hype among big corp.

  - url: https://slack.engineering/chrome-tracing-for-fun-and-profit-a15ec83aa908
    title: "Chrome Tracing for Fun and Profit"
    description: |
      Love or hate it. You have to write JavaScript and use devtool to debug it.
      Slack write up on using Chrome Tracing: a tool thatâ€™s built into Chrome (and Electron) that can collect a huge variety of detailed performance data.

  - url: https://www.revenuecat.com/2019/06/19/aurora-migration-zero-downtime
    title: "Mmigrated database to Amazon Aurora with zero downtime"
    description: |
      Lessons learned migrating RevenueCat from RDS PostgreSQL to Amazon Aurora. I like how they said it: "Be opportunistic. Do it when you can do it, before you must do it."

  - url: https://medium.com/dailyjs/user-interfaces-you-can-trust-with-state-machines-49de7fa138a6
    title: "User Interfaces You Can Trust with State Machines"
    description: |
      How using explicit state machines in the modelization and implementation of user interfaces leads to robust, maintainable and testable interfaces.

  - url: http://www.haskellforall.com/2019/06/the-cap-theorem-for-software-engineering.html
    title: "CAP theorem for software engineering"
    description: |
      CAP says that distributed system cannot sasitify all three of Consistency, Availability and Partition tolerance.
      What if we were to squint and apply the CAP theorem to another distributed system: a team of software engineers working towards a common goal

  - url: https://docs.keydb.dev/blog/2019/06/17/blog-post/
    title: "How Fast can A Single Instance of Redis be?"
    description: |
      We all love Redis. It is easy to setup and run and you just forgot about its exsistence. But its single thread make you have
      to carefuly to avoid blocking in a single request. KeyDB is a multi-thread fork of Redis. It claims 2x performance.

  - url: http://notes.eatonphil.com/compiler-basics-llvm-system-calls.html
    title: "Compiler basics (5): LLVM system calls"
    description: |
      We linked to this serias a few times.
      In this post, we'll extend the ulisp compiler's LLVM backend to support printing integers to stdout.

  - url: https://pierrehedkvist.com/posts/1-creating-a-collaborative-editor
    title: "Creating a Collaborative Editor"
    description: |
      A collaborative editor are able to keep a consistent state, even though multiple users are typing simultaneously. Even if multiple users are hammering away, smashing their keyboards, the state is kept consistent.  Operational Transformation and Conflict-Free Replicated data type are algorithms to solve this problem.


#  - url: https://developer.ibm.com/articles/nodejs-memory-management-in-container-environments/
#    title: "Node.js memory management in container environments"
#    description: |
#      Best practices for managing memory in container-based Node.js apps
#
#  - url: https://eng.uber.com/web-development-video-series-one/
#  - url: https://pdziepak.github.io/2019/06/21/avoiding-icache-misses/
#    title: "Avoiding instruction cache misses"
#
#  - url: http://wtarreau.blogspot.com/2018/02/progressive-locks-fast-upgradable.html
#    title: "Progressive Locks : fast, upgradable read/write locks"
#    description: |
#
#
#  - url: https://bytefish.de/blog/postgresql_interpolation/
#    title: "Linear Interpolation with PostgreSQL"
#    description: |
#
#    https://ferrous-systems.com/blog/lock-free-ring-buffer/
#
#
#
#- url: https://technicshistory.wordpress.com/2019/06/02/arpanet-part-2-the-packet/
#url: https://apenwarr.ca/log/20170810
#title: "The world in which IPv6 was a good design"
#.
#http://www.unixsheikh.com/articles/battle-testing-data-integrity-verification-with-zfs-btrfs-and-mdadm-dm-integrity.html
#
#url: https://queue.acm.org/detail.cfm?id=2917756
#title: "Why Logical Clocks are Easy"
#
#url: https://hackernoon.com/react-native-performance-do-and-dont-1198e97b730a
#title: "React Native Performance: Do and Don't"
#https://prdeving.wordpress.com/2019/06/05/how-to-write-a-game-engine-in-pure-c-part-2-the-graphic-initialization/
#http://blog.cleancoder.com/uncle-bob/2019/06/08/TestsAndTypes.html
#https://yorickpeterse.com/articles/writing-a-self-hosting-compiler-for-inko/
#https://gitlab.com/inko-lang/inko/tree/master/compiler/lib/inkoc
#https://vega.github.io/vega/
#https://medium.com/@lormayna/writeup-of-a-cybersecurity-engineer-interview-b6b8e8a0f26c


video:
  - url: https://v8.dev/blog/trash-talk
    title: "Trash talk: the Orinoco garbage collector"
    description: |
      The new V8 garbage collector

  - url: https://grafana.com/blog/2019/06/10/how-not-to-fail-at-visualization/
    title: "How Not to Fail at Visualization"
    description: |
      Wrong visualization makes it harder to spot production issue.

read_code:
  - url: https://github.com/m-labs/smoltcp
    title: smoltcp
    description: |
      a standalone, event-driven TCP/IP stack that is designed for bare-metal, real-time systems
    category: ['Rust']

  - url: https://github.com/rouge-ruby/rouge
    title: "rouge"
    description: |
      A pure-ruby code highlighter that is compatible with pygment
    category: ['Ruby']

  - url: https://github.com/olivia-ai/olivia
    title: "olivia"
    description: |
      chatbot built with an artificial neural network
    categor: ['Go']

  - url: https://github.com/OakwoodAI/Automagica
    title: "automagica"
    description: |
      Open Source (Smart) Robotic Process Automation
    category: ['Python']

  - url: https://github.com/jeaye/toybox/tree/master/httpd-asm#readme
    title: httpd-asm
    description: |
      A static file server in x86 Assembly

tool:
  - url: https://github.com/pigigaldi/Pock
    title: Pock
    description: |
      Display macOS Dock in Touch Bar

  - url: https://github.com/f-prime/fist
    title: fish
    description: |
      A lightweight full-text index server with a focus on speed and efficiency

  - url: https://github.com/jpillora/chisel
    title: chisel
    description: |
      A fast TCP tunnel over HTTP to pass through firewall. Similar to ngrok.

  - url: https://github.com/foxlet/macOS-Simple-KVM/
    title: macOS-simple-kvm
    description: |
       set up a quick macOS VM in QEMU, accelerated by KVM
